name: Version Update and Publish

on:
    push:
        branches: [master]

jobs:
    update-version:
        name: Update Package Version
        runs-on: ubuntu-latest
        permissions:
            contents: write
        outputs:
            version_updated: ${{ steps.update.outputs.version_updated }}
            new_version: ${{ steps.update.outputs.new_version }}
        steps:
            - name: Checkout Code
              uses: actions/checkout@v4
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  fetch-depth: 0

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '20'

            - name: Install dependencies
              run: npm ci

            - name: Get commit message and determine version bump
              id: version_info
              run: |
                  COMMIT_MSG=$(git log -1 --pretty=%B)
                  echo "Commit message: $COMMIT_MSG"

                  if [[ $COMMIT_MSG == *"breaking"* ]] || [[ $COMMIT_MSG == *"major"* ]]; then
                    echo "BUMP_TYPE=major" >> $GITHUB_OUTPUT
                  elif [[ $COMMIT_MSG == *"feat"* ]] || [[ $COMMIT_MSG == *"feature"* ]]; then
                    echo "BUMP_TYPE=minor" >> $GITHUB_OUTPUT
                  elif [[ $COMMIT_MSG == *"fix"* ]] || [[ $COMMIT_MSG == *"bugfix"* ]]; then
                    echo "BUMP_TYPE=patch" >> $GITHUB_OUTPUT
                  else
                    echo "BUMP_TYPE=patch" >> $GITHUB_OUTPUT
                  fi

            - name: Update version
              id: update
              run: |
                  BUMP_TYPE=${{ steps.version_info.outputs.BUMP_TYPE }}
                  echo "Bumping $BUMP_TYPE version..."

                  NEW_VERSION=$(npm version $BUMP_TYPE --no-git-tag-version)
                  echo "New version: $NEW_VERSION"

                  git config --local user.email "github-actions[bot]@users.noreply.github.com"
                  git config --local user.name "github-actions[bot]"
                  git add package.json
                  git commit -m "chore: bump version to $NEW_VERSION"
                  git push

                  echo "version_updated=true" >> $GITHUB_OUTPUT
                  echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

    publish:
        name: Publish to NPM
        runs-on: ubuntu-latest
        needs: update-version
        if: needs.update-version.outputs.version_updated == 'true'
        steps:
            - name: Checkout Code with updated version
              uses: actions/checkout@v4
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  fetch-depth: 0
                  # Выполняем git pull чтобы получить последние изменения
                  ref: master

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '20'
                  registry-url: 'https://registry.npmjs.org/'

            - name: Install dependencies
              run: npm ci

            - name: Verify updated version
              run: |
                  echo "Current version in package.json:"
                  node -p "require('./package.json').version"
                  echo "Expected version: ${{ needs.update-version.outputs.new_version }}"

            - name: Run linting
              run: npm run lint

            - name: Build package
              run: npm run build

            - name: Check if version already published
              id: check_publish
              run: |
                  VERSION=${{ needs.update-version.outputs.new_version }}
                  PACKAGE_NAME=$(node -p "require('./package.json').name")
                  echo "Checking if version $VERSION of $PACKAGE_NAME is already published..."

                  if npm view $PACKAGE_NAME@$VERSION version >/dev/null 2>&1; then
                    echo "Version $VERSION already published, skipping"
                    echo "should_publish=false" >> $GITHUB_OUTPUT
                  else
                    echo "Version $VERSION not published, will publish"
                    echo "should_publish=true" >> $GITHUB_OUTPUT
                  fi

            - name: Publish to NPM
              if: steps.check_publish.outputs.should_publish == 'true'
              run: npm publish
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}

            - name: Skip publish message
              if: steps.check_publish.outputs.should_publish == 'false'
              run: echo "✅ Version ${{ needs.update-version.outputs.new_version }} already published, skipping"
